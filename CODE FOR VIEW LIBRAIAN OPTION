package adminlogin;
import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import dbcon.DBCon;
public class Viewlibrarian extends JFrame implements ActionListener{
JFrame frame, frame1;
JTextField textbox;
JLabel label;
JButton button;
JPanel panel;
static JTable table;
String[] columnNames 
={"Id","Name","Gender","Father_name","Password","cpassword","City","Email","Phone No"};
public void createUI()
{
frame = new JFrame("Database Search Result");
frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
frame.setLayout(null);
button = new JButton("search");
button.setBounds(120,130,150,20);
button.addActionListener(this);
frame.add(button);
frame.setVisible(true);
frame.setSize(500, 400); 
} 
public void actionPerformed(ActionEvent ae)
{
button = (JButton)ae.getSource();
System.out.println("Showing Table Data.......");
showTableData(); 
} 
public void showTableData()
{

frame1 = new JFrame("VIEW LIBRARIAN");
frame1.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
frame1.setLayout(new BorderLayout()); 
DefaultTableModel model = new DefaultTableModel();
model.setColumnIdentifiers(columnNames);
table = new JTable();
table.setModel(model); 
table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
table.setFillsViewportHeight(true);
JScrollPane scroll = new JScrollPane(table);
scroll.setHorizontalScrollBarPolicy(
JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
scroll.setVerticalScrollBarPolicy(
JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED); 
String id= "";
String name= "";
String gender= "";
String father_name = "";
String password = "";
String cpassword = "";
String city = "";
String email = "";
String phno = "";
try
{ 
Connection con = DBCon.getCon();
String sql = "select * from librarian";
PreparedStatement ps = con.prepareStatement(sql);
ResultSet rs = ps.executeQuery();
int i =0;
while(rs.next())
{
id = rs.getString(1);
name = rs.getString(2);
gender = rs.getString(3);
father_name = rs.getString(4);
password = rs.getString(5);
cpassword = rs.getString(6);
city = rs.getString(7);
email = rs.getString(8); 
phno= rs.getString(9);
model.addRow(new Object[]{id , name, gender, 
father_name,password,cpassword,city,email,phno});
i++; 
}
if(i <1)
{
JOptionPane.showMessageDialog(null, "No Record Found","Error",
JOptionPane.ERROR_MESSAGE);
}
if(i ==1)
{
System.out.println(i+" Record Found");
}
else
{
System.out.println(i+" Records Found");
}
}
catch(Exception ex)
{
JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
}
frame1.add(scroll);
frame1.setVisible(true);
frame1.setSize(400,300);
}
public static void main(String args[])
{
Viewlibrarian sr = new Viewlibrarian();
sr.createUI(); 
}
}
